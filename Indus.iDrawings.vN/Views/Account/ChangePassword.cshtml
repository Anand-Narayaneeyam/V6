@using Indus.iDrawings.vN.Models
@model changePasswordViewModel
@{
    Layout = null;
}

<style>
    .input-validation-error {
        border: 1px solid red !important;
    }
</style>
<div id="dialogboxForMessage" tooltip="iDrawings">
    <div id="dvMessageBox" style="text-align:center"></div>
</div>
@using (Html.BeginForm("changePasswordConfirmation", "Account", FormMethod.Post, new { id = "resetPasswordForm" }))
{
    @Html.Hidden("Passwordlength", Model.Passwordlength);
    @Html.AntiForgeryToken()
    <div id="DivMessage">
    </div>
    <div id="smart-green">
        <div class="text">
            <div>
                @Html.LabelFor(model => model.LoginName)
            </div>
        </div>
        <div class="control">
            <div>
                @Html.TextBoxFor(model => model.LoginName, new { id = "txtLoginName", name = "txtLoginName", @readonly = "readonly" })
            </div>
        </div>
        <div class="text">
            <div>
                @Html.LabelFor(model => model.CurrentPassword)<span style="color:red"> *</span>
            </div>
        </div>
        <div class="control">
            <div>
                @Html.PasswordFor(model => model.CurrentPassword, new { id = "txtCurrentPassword", name = "txtCurrentPassword", @Autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.CurrentPassword)
            </div>
        </div>
        <div class="text" style="height:75px!important;">
            <div>
                <label> New Password</label><span style="color:red"> *</span>
            </div>
        </div>
        <div class="control" style="height:75px!important;">
            <div>
                @Html.PasswordFor(model => model.Password, new { id = "pass", name = "pass", onkeyup = "passwordStrength(this.value)", @Autocomplete = "off" })
                <p style="margin:0;font-size:11px;"> @("(Minimum " + Model.Passwordlength + " Characters)")</p>
                <table id="tblPasswordRating" style="border: 1px solid #E0D7CD; width: 80%; height: 10px;"
                       bgcolor="#D1D1D1" border="0" cellpadding="0" cellspacing="0">
                    <tr style="border-right-style: groove; border-right-width: 1px">
                        <td id="pr0" style="font-size: 12px;width:70px;">&nbsp;</td>
                        <td id="pr1" style="font-size: 12px;width:30px;">&nbsp;</td>
                        <td id="pr2" style="font-size: 12px;width:30px;">&nbsp;</td>
                        <td id="pr3" style="font-size: 12px;">&nbsp;</td>
                        <td id="pr4" style="font-size: 12px;">&nbsp;</td>
                        <td id="pr5" style="font-size: 12px;">&nbsp;</td>
                        <td id="divText" style=" font-size xx-small; font-weight bold;"
                            align="center"></td>
                    </tr>
                </table>
                @Html.ValidationMessageFor(model => model.Password)

            </div>
        </div>
        <div class="text">
            <div>
                <label>Confirm New Password</label><span style="color:red"> *</span>
            </div>
        </div>
        <div class="control">
            <div>
                @Html.PasswordFor(model => model.ConfirmPassword, new { id = "txtconfirmpassword", name = "txtconfirmpassword", data_val = false, @Autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>

        @Html.HiddenFor(model => model.RSA_E, new { id = "txtrsRSAE" })
        @Html.HiddenFor(model => model.RSA_M, new { id = "txtrsRSAM" })   
        <p><span style="color:red"> *</span>Required</p>     
    </div>   

}
<script type="text/javascript">

    $(document).ready(function () {
        
            //var okReturn=showAlertBoxInstance("Password has to be changed at this login. Please change your password now");
            //okReturn.okClick = function(){
            //    document.getElementById("txtCurrentPassword").focus();
            //}
        if ($('#smart-green input[name="LoginName"]').length > 0)
            $('#smart-green input[id="txtLoginName"]')[0].setAttribute('aria-label', ('Login Name ' + $('#smart-green input[name="LoginName"]')[0].value + ' readonly'));
        if ($('#smart-green input[id="txtCurrentPassword"]').length > 0)
            $('#smart-green input[id="txtCurrentPassword"]')[0].setAttribute('aria-label', 'Current Password Mandatory Field');
        if ($('#smart-green input[id="pass"]').length > 0)
            $('#smart-green input[id="pass"]')[0].setAttribute('aria-label', 'New Password Mandatory Field Minimum 8 Characters required');
        if ($('#smart-green input[id="txtconfirmpassword"]').length > 0)
            $('#smart-green input[id="txtconfirmpassword"]')[0].setAttribute('aria-label', 'Confirm Password Mandatory Field');

        document.getElementById("txtCurrentPassword").focus();
    })

    $('#txtCurrentPassword,#pass,#txtconfirmpassword').keypress(function (event) {
        if (event.which == 13) {
            formSubmit();
            return false;
        }
    });

    function MessageRender() {
        $('#DivMessage').load('@Url.Action("ShowMessage", "Account")');
    }

    function Cancel_OnClick() {
        $("#changepassworddialog").dialog("close");
        document.getElementById("txtUserName").focus();
    }
    var key;
    function rsinitKey() {
        setMaxDigits(131);
        RSA_E = document.getElementById("txtrsRSAE").value;
        RSA_M = document.getElementById("txtrsRSAM").value;
        key = new RSAKeyPair(RSA_E, "", RSA_M);
    }
    function formSubmit() {
        clearValidation($("#changepassworddialog"));
        rsinitKey();
        document.getElementById('txtCurrentPassword').value = almaarrattam(document.getElementById('txtCurrentPassword').value);
        document.getElementById('pass').value = almaarrattam(document.getElementById('pass').value);
        document.getElementById('txtconfirmpassword').value = almaarrattam(document.getElementById('txtconfirmpassword').value);
        var urlSave = '@Url.Action("changePasswordConfirmation", "Account")';
        $.ajax({
            type: 'POST',
            url: urlSave,
            data: $('#resetPasswordForm').serialize(),
            success: function (returndata) {
                if (validateResponse(returndata, $("#changepassworddialog"))) {
                    showAlertBox("Password updated");
                    if (document.getElementById('TxtPassword'))
                        document.getElementById('TxtPassword').value = "";
                    if (document.getElementById('txtUserName'))
                        document.getElementById('txtUserName').value = "";
                    $("#changepassworddialog").dialog("close");
                }
            }
        });
        return true;
    };
</script>
<script type="text/javascript">
    function passwordStrength(password)
    {
        var desc = new Array(); desc[0] = "Very Weak"; desc[1] = "Weak"; desc[2] = "Better"; desc[3] = "Medium"; desc[4] = "Strong"; desc[5] = "Best"; var score = 0;
        var Color = new Array(); Color[0] = "url('../Content/Images/TapV6/Ps0.gif')"; Color[1] = "url('../Content/Images/TapV6/Ps1.gif')"; Color[2] = "url('../Content/Images/TapV6/Ps2.gif')"; Color[3] = "url('../Content/Images/TapV6/Ps3.gif')"; Color[4] = "url('../Content/Images/TapV6/Ps4.gif')"; Color[5] = "url('../Content/Images/TapV6/Ps5.gif')";
        if (password.length > 4) {
            score++;
            if ((password.match(/[a-z]/)) && (password.match(/[A-Z]/))) score++;
            if (password.match(/[a-z]/)) g_blnIsLowerCase = 'True'; else g_blnIsLowerCase = 'False';
            if (password.match(/[A-Z]/)) g_blnIsUpperCase = 'True'; else g_blnIsUpperCase = 'False';
            if (password.match(/[0-9]/)) score++;
            if (password.match(/[0-9]/)) g_blnIsNumeric = 'True'; else g_blnIsNumeric = 'False';
            if (password.match(/.[!,@@,#,$,%,^,&,*,?,_,-,(,)]/)) score++;
            if (password.match(/.[!,@@,#,$,%,^,&,*,?,_,\-,(,),/]/)) g_blnIsNonAlphaNumeric = 'True'; else g_blnIsNonAlphaNumeric = 'False';
            if (password.length > 12) score++;
        }
        if (password.length == 0) {
            document.getElementById("pr0").innerHTML = "Not Rated";
            for (s = 0; s < 6; s++)
                document.getElementById("pr" + s).style.background = "";
        }
        else {
            for (s = 0; s <= score; s++)
                document.getElementById("pr" + s).style.background = Color[score];
            for (s = score + 1; s < 6; s++)
                document.getElementById("pr" + s).style.background = "";
            document.getElementById("pr0").innerHTML = desc[score];
        }
    }
</script>

