import { Component, Output, EventEmitter, Input, AfterContentInit, SimpleChange, ElementRef, AfterViewInit, DoCheck, ViewEncapsulation} from '@angular/core';
import { Http, Response, HTTP_PROVIDERS } from '@angular/http';
import { Notification } from '../../../Framework/Whatever/Notification/notify.component';
import { NotificationService } from '../../../Framework/Models/Notification/notify.service';
import { FieldComponent } from '../../../Framework/Whatever/DynamicControls/DynamicFields/fieldGeneration.component';
import { IField } from '../../../Framework/Models//Interface/IField';
import { WorkOrdereService } from '../../../Models/WorkOrder/workorder.service'

@Component({
    selector: 'pmschedules-addedit',
    templateUrl: 'app/Views/WorkOrder/Maintenance/pmschedules-addedit.html',
    directives: [FieldComponent, Notification],
    providers: [WorkOrdereService, NotificationService],
    inputs: ['selectedId', 'action', 'fieldDetailsAddEdit', 'btnName', 'scheduleTypesSiteId', 'scheduleTypesEquipmentCategoryId', 'scheduleTypesEquipmentClassId', 'scheduleTypesRouteId'],
    encapsulation: ViewEncapsulation.None
})

export class PMSchedulesAddEditComponent implements DoCheck {
    success: any;
    dataKey: string = "Id";
    scheduleTypesSiteId: any;
    scheduleTypesEquipmentCategoryId: any;
    scheduleTypesEquipmentClassId: any;
    scheduleTypesRouteId: any;
    equipmentCategoryId: number;
    masterPMId: number;
    equipmentClassId: number;
    isMeterBased: boolean = false;
    isApplyUpdatesforMasterPM: boolean = false;
    isAutoGeneratedWorkOrder: boolean = false;
    selectedId: number;
    ddlEquipmentCategory: IField;
    ddlEquipmentClass: IField;
    ckblEquipmentNo: IField;
    ckblWeekDays: IField;
    rbtnMonthlyReccurencePatternCriteria: any;
    ddlMonthlyDayNo: any;
    ddlMonthlyWeekOccurence: any;
    ddlMonthlyWeekDay: any;
    rbtnYearlyReccurencePatternCriteria: any;
    ddlYearlyDayNo: any;
    ddlYearlyMonthDay: any;
    ddlYearlyWeekOccurence: any;
    ddlYearlyWeekDay: any;
    ddlYearlyMonthofYear: any;
    ddlMeterField: any;
    rbtnFrequency: any;
    ddlPerformOn: any;
    rbtnReccurencePattern: any;
    rbtnReccurenceRange: any;
    ddlEndAfter
    lstBxSeasons: any;
    datePickerEndBy: any;
    txtbxEvery: any;
    txtbxAny: any;
    txtbxGenerateWorkOrders: any;
    ddlWorkType: any;
    ckblActionPointUser: IField;
    ckblSeasons: IField;
    ckbxApplyUpdates: IField;
    ddlMasterPM: IField;
    ckbxAutoPm: IField;
    masterPMDetails: any[];
    public fieldDetailsAddEdit: IField[];
    fieldDetailsAddEditChk: any;
    ngStatus = false;
    formHeight: any;
    @Input() action: string;
    @Output() submitSuccess = new EventEmitter();

    constructor(private workOrdereService: WorkOrdereService, private notificationService: NotificationService, private el: ElementRef) {
    }

    ngOnInit(): void {

        this.formHeight = window.innerHeight - 250;
        this.formHeight = this.formHeight + "px";
        var contextObj = this;
        this.ddlEquipmentCategory = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1383;
        });
        this.ddlEquipmentClass = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1384;
        });
        this.ckblEquipmentNo = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1401;
        });
        this.ckblWeekDays = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1415;
        });
        this.rbtnMonthlyReccurencePatternCriteria = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1372;
        });
        this.ddlMonthlyDayNo = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1373;
        });
        this.ddlMonthlyWeekOccurence = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1374;
        });
        this.ddlMonthlyWeekDay = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1375;
        });
        this.rbtnYearlyReccurencePatternCriteria = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1381;
        });
        this.ddlYearlyDayNo = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1376;
        });
        this.ddlYearlyMonthDay = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1377;
        });
        this.ddlYearlyWeekOccurence = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1378;
        });
        this.ddlYearlyWeekDay = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1379;
        });
        this.ddlYearlyMonthofYear = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1380;
        });
        this.ddlMeterField = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1404;
        });
        this.rbtnFrequency = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1406;
        });
        this.ddlPerformOn = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1413;
        });
        this.rbtnReccurencePattern = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1414;
        });
        this.lstBxSeasons = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1382;
        });
        this.rbtnReccurenceRange = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1421;
        });
        this.ddlEndAfter = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1422;
        });
        this.datePickerEndBy = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1198;
        });
        this.ddlMeterField = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1404;
        });
        this.rbtnFrequency = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1406;
        });
        this.txtbxEvery = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1407;
        });
        this.txtbxAny = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1408;
        });
        this.txtbxGenerateWorkOrders = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1411;
        });
        this.ddlWorkType = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1412;
        });
        this.ckblActionPointUser = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1423;
        });
        this.ckblSeasons = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1382;
        });
        this.ddlMasterPM = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1369;
        });
        this.ckbxApplyUpdates = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1370;
        });
        this.ckbxAutoPm = this.fieldDetailsAddEdit.find(function (item) {
            return item.FieldId === 1410;
        });
        if (this.ckbxAutoPm.FieldValue == "1") {
            this.isAutoGeneratedWorkOrder = true;
        }
    }

    onSubmitData(event) {
        var contextObj = this;
        switch (this.action) {
            case "add":
                this.postSubmit(contextObj, event["fieldobject"], 1);
                break;
            case "edit":
                this.postSubmit(contextObj, event["fieldobject"], 2);
                break;
        }
    }

    ngDoCheck() {
        var context = this;
        if (this.fieldDetailsAddEditChk == undefined) {
            if (this.fieldDetailsAddEdit != undefined) {
                var chk;
                chk = this.fieldDetailsAddEdit.filter(function (el) {
                    if (el["FieldId"] == 1414)
                        return true;
                    else
                        return false;
                });
                this.fieldDetailsAddEditChk = chk;
            }
        }
        if (this.fieldDetailsAddEditChk != undefined && this.ngStatus == false) {
            var element5 = this.el.nativeElement.getElementsByClassName("Radio-1421");
            if (element5.length != 0) {
                element5[0].style.display = "block";
                element5[1].style.display = "block";
                element5[0].style.padding = "5px 0px";
                element5[1].style.padding = "5px 0px";
                var element3 = this.el.nativeElement.getElementsByClassName("MainContainer_1422");
                element3[0].style.margin = "20px 0px 0px 0px";
                var element4 = this.el.nativeElement.getElementsByClassName("MainContainer_1198");
                element4[0].style.margin = "margin:-18px 0px 0px 100px";
                element4[0].style.display = "-webkit - inline - box";
                this.ngStatus = true;
                context.fieldDetailsAddEdit.find(function (item) {
                    if (item.FieldId == 1414) {
                        if (item.FieldValue == "1") {
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1373");
                            element[0].style.margin = "0px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1374");
                            element2[0].style.margin = "0px";
                            var element3 = context.el.nativeElement.getElementsByClassName("MainContainer_1375");
                            element3[0].style.margin = "0px";
                            var element4 = context.el.nativeElement.getElementsByClassName("MainContainer_1376");
                            element4[0].style.margin = "0px";
                            var element5 = context.el.nativeElement.getElementsByClassName("MainContainer_1377");
                            element5[0].style.margin = "0px";
                            var element6 = context.el.nativeElement.getElementsByClassName("MainContainer_1378");
                            element6[0].style.margin = "0px";
                            var element7 = context.el.nativeElement.getElementsByClassName("MainContainer_1379");
                            element7[0].style.margin = "0px";
                            var element8 = context.el.nativeElement.getElementsByClassName("MainContainer_1380");
                            element8[0].style.margin = "0px";
                            var element9 = context.el.nativeElement.getElementsByClassName("Div-1380");
                            if (element9.length != 0)
                                element9[0].style.margin = "0px";
                        }
                        if (item.FieldValue == "2") {
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1373");
                            element[0].style.margin = "0px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1374");
                            element2[0].style.margin = "0px";
                            var element3 = context.el.nativeElement.getElementsByClassName("MainContainer_1375");
                            element3[0].style.margin = "0px";
                            var element4 = context.el.nativeElement.getElementsByClassName("MainContainer_1376");
                            element4[0].style.margin = "0px";
                            var element5 = context.el.nativeElement.getElementsByClassName("MainContainer_1377");
                            element5[0].style.margin = "0px";
                            var element6 = context.el.nativeElement.getElementsByClassName("MainContainer_1378");
                            element6[0].style.margin = "0px";
                            var element7 = context.el.nativeElement.getElementsByClassName("MainContainer_1379");
                            element7[0].style.margin = "0px";
                            var element8 = context.el.nativeElement.getElementsByClassName("MainContainer_1380");
                            element8[0].style.margin = "0px";
                            var element9 = context.el.nativeElement.getElementsByClassName("Div-1380");
                            if (element9.length != 0)
                                element9[0].style.margin = "0px";
                        }
                        if (item.FieldValue == "3") {
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1373");
                            element[0].style.margin = "-68px 0px 0px 60px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1374");
                            element2[0].style.margin = "-15px 0px 0px 60px";
                            var element3 = context.el.nativeElement.getElementsByClassName("MainContainer_1375");
                            element3[0].style.margin = "-54px 0px 0px 170px";
                            var element3 = context.el.nativeElement.getElementsByClassName("Radio-1372");
                            element3[0].style.display = "block";
                            element3[1].style.display = "block";
                            element3[2].style.display = "block";
                            element3[0].style.padding = "5px 0px";
                            element3[1].style.padding = "5px 0px";
                            element3[2].style.padding = "5px 0px";

                            var element4 = context.el.nativeElement.getElementsByClassName("MainContainer_1376");
                            element4[0].style.margin = "0px";
                            var element5 = context.el.nativeElement.getElementsByClassName("MainContainer_1377");
                            element5[0].style.margin = "0px";
                            var element6 = context.el.nativeElement.getElementsByClassName("MainContainer_1378");
                            element6[0].style.margin = "0px";
                            var element7 = context.el.nativeElement.getElementsByClassName("MainContainer_1379");
                            element7[0].style.margin = "0px";
                            var element8 = context.el.nativeElement.getElementsByClassName("MainContainer_1380");
                            element8[0].style.margin = "0px";
                            var element9 = context.el.nativeElement.getElementsByClassName("Div-1380");
                            if (element9.length != 0)
                                element9[0].style.margin = "0px";
                        }

                        if (item.FieldValue == "4") {
                            var elementPre = context.el.nativeElement.getElementsByClassName("MainContainer_1373");
                            elementPre[0].style.margin = "0px";
                            var elementPre2 = context.el.nativeElement.getElementsByClassName("MainContainer_1374");
                            elementPre2[0].style.margin = "0px";
                            var elementPre3 = context.el.nativeElement.getElementsByClassName("MainContainer_1375");
                            elementPre3[0].style.margin = "0px";

                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1376");
                            element[0].style.margin = "-68px 0px 0px 60px";
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1377");
                            element[0].style.margin = "-54px  0px 0px 160px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1378");
                            element2[0].style.margin = "-15px 0px 0px 60px";
                            var element3 = context.el.nativeElement.getElementsByClassName("MainContainer_1379");
                            element3[0].style.margin = "-54px 0px 0px 160px";
                            var element4 = context.el.nativeElement.getElementsByClassName("MainContainer_1380");
                            element4[0].style.margin = "-40px 0px 0px 255px";
                            var element6 = context.el.nativeElement.getElementsByClassName("Div-1380");
                            if (element6.length != 0)
                                element6[0].style.margin = "-30px 0px 0px 20px";
                            var element5 = context.el.nativeElement.getElementsByClassName("Radio-1381");
                            element5[0].style.display = "block";
                            element5[1].style.display = "block";
                            element5[2].style.display = "block";
                            element5[0].style.padding = "5px 0px";
                            element5[1].style.padding = "5px 0px";
                            element5[2].style.padding = "5px 0px";

                        }


                    }
                    if (item.FieldId == 1421) {
                        if (item.FieldValue == "11") {
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1422");
                            element[0].style.margin = "-65px 0px 0px 100px";
                            var element1 = context.el.nativeElement.getElementsByClassName("MainContainer_1382");
                            element1[0].style.margin = "20px 0px 0px 0px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1198");
                            element2[0].style.margin = "margin: 0px 0px 0px 100px";
                        }
                        if (item.FieldValue == "12") {
                            var element = context.el.nativeElement.getElementsByClassName("MainContainer_1422");
                            element[0].style.margin = "-65px 0px 0px 100px";
                            var element1 = context.el.nativeElement.getElementsByClassName("MainContainer_1382");
                            element1[0].style.margin = "20px 0px 0px 0px";
                            var element2 = context.el.nativeElement.getElementsByClassName("MainContainer_1198");
                            element2[0].style.margin = "-18px 0px 0px 100px";
                        }
                    }
                    if (item.FieldId == 1401) {
                        var element14 = context.el.nativeElement.getElementsByClassName("MainContainer_1401");
                        element14[0].style.margin = "5px 0px 0px 0px";
                    }
                    return false;
                });
            }
        }
    }

    ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {
        if (changes["fieldDetailsAddEdit"] && changes["fieldDetailsAddEdit"]["currentValue"] != undefined) {
            this.fieldDetailsAddEditChk = undefined;
            this.ngStatus = false;
        }
    }

    postSubmit(contextObj, pageDetails: string, target: number) {
        var scheduleTypesSite;
        var scheduleTypesRoute;
        var scheduleTypesEquipmentCategory;
        var scheduleTypesEquipmentClass;
        var generateWO;
        if (this.scheduleTypesSiteId == undefined) {
            scheduleTypesSite = 0;
        }
        else {
            scheduleTypesSite = this.scheduleTypesSiteId;
        }
        if (this.scheduleTypesEquipmentCategoryId == undefined) {
            scheduleTypesEquipmentCategory = 0;
        }
        else {
            scheduleTypesEquipmentCategory = this.scheduleTypesEquipmentCategoryId;
        }
        if (this.scheduleTypesEquipmentClassId == undefined) {
            scheduleTypesEquipmentClass = 0;
        }
        else {
            scheduleTypesEquipmentClass = this.scheduleTypesEquipmentClassId;
        }
        if (this.scheduleTypesRouteId == undefined) {
            scheduleTypesRoute = 0;
        }
        else {
            scheduleTypesRoute = this.scheduleTypesRouteId;
        }
        var arr = new Array<ReportFieldArray>();
        arr = JSON.parse(pageDetails);
        for (let i = 0; i < arr.length; i++) {
            switch (arr[i].ReportFieldId) {
                case 8354:
                    arr[i].Value = scheduleTypesSite;
                    break;
                case 5570:
                    arr[i].Value = scheduleTypesRoute;
                    break;
                case 4491:
                    arr[i].Value = scheduleTypesEquipmentCategory;
                    break;
                case 647:
                    arr[i].Value = scheduleTypesEquipmentClass;
                    break;
                case 500146:
                    if (this.action == "add") {
                        if (this.isApplyUpdatesforMasterPM) {
                            arr[i].Value = "1";
                        } else {
                            arr[i].Value = "0";
                        }
                    }
                    break;
                case 500337:
                    if (this.action == "add" || this.action == "edit") {
                        if (this.isAutoGeneratedWorkOrder) {
                            arr[i].Value = "1";
                        } else {
                            arr[i].Value = "0";
                        }
                    }
                    break;
                case 7816:
                    if (this.isMeterBased) {
                        arr[i].Value = "1";
                    } else {
                        arr[i].Value = "0";
                    }
                    break;
                case 5584:
                    if (this.isAutoGeneratedWorkOrder) {
                        if (new Number(arr[i].Value) < 1 || new Number(arr[i].Value) > 30) {
                            this.notificationService.ShowToaster("Enter value between 1 and 30 for the number of days before the next PM date for which the Work Order needs to be generated", 2);
                            return;
                        }
                    }
                    break;
            }
        }
        this.workOrdereService.postSubmitPMSchedule(JSON.stringify(arr), this.selectedId, target).subscribe(function (resultData) {
            contextObj.success = resultData["Data"];
            switch (resultData["Data"].StatusId) {
                case 1:
                    if (target == 1) {
                        contextObj.notificationService.ShowToaster("PM Schedule added", 3);
                        contextObj.submitSuccess.emit({ status: "success", returnData: contextObj.success.Data });
                    } else {
                        contextObj.notificationService.ShowToaster("PM Schedule updated", 3);
                        contextObj.submitSuccess.emit({ status: "success", returnData: contextObj.success.Data });
                    }
                    break;
                case 3:
                    if (resultData["Data"].ServerId == -1) {
                        //contextObj.notificationService.ShowToaster("PM Schedule already exists", 5);
                        contextObj.notificationService.ShowToaster(resultData["Data"].Message, 5);
                    }
                    break;
            }
        });
    }

    rbtnOnChange(event: any, target?: any) {
        var contextObj = this;
        var value;
        if (target != null) {
            value = target;
        }
        else {
            value = event["rbtnObject"]["fieldobject"]["FieldValue"];
        }
        switch (value) {
            case "1":
                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlMonthlyDayNo.IsEnabled = false;
                contextObj.ddlMonthlyDayNo.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.IsEnabled = false;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = false;
                contextObj.ddlMonthlyWeekDay.IsEnabled = false;
                contextObj.ddlMonthlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyDayNo.IsEnabled = false;
                contextObj.ddlYearlyDayNo.IsVisible = false;
                contextObj.ddlYearlyMonthDay.IsEnabled = false;
                contextObj.ddlYearlyMonthDay.IsVisible = false;
                contextObj.ddlYearlyWeekOccurence.IsEnabled = false;
                contextObj.ddlYearlyWeekOccurence.IsVisible = false;
                contextObj.ddlYearlyWeekDay.IsEnabled = false;
                contextObj.ddlYearlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyMonthofYear.IsEnabled = false;
                contextObj.ddlYearlyMonthofYear.IsVisible = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                var element = this.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "0px";
                var element2 = this.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "0px";
                var element3 = this.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "0px";
                var element4 = this.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = this.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = this.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = this.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = this.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = this.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case "2":
                contextObj.ckblWeekDays.IsEnabled = true;
                contextObj.ckblWeekDays.IsVisible = true;
                contextObj.ckblWeekDays.FieldLabel = "";

                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlMonthlyDayNo.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = false;
                contextObj.ddlMonthlyWeekDay.IsVisible = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlYearlyDayNo.IsVisible = false;
                contextObj.ddlYearlyMonthDay.IsVisible = false;
                contextObj.ddlYearlyWeekOccurence.IsVisible = false;
                contextObj.ddlYearlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyMonthofYear.IsVisible = false;
                var element = this.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "0px";
                var element2 = this.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "0px";
                var element3 = this.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "0px";
                var element4 = this.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = this.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = this.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = this.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = this.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = this.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case "3":
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = true;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = true;
                contextObj.rbtnMonthlyReccurencePatternCriteria.FieldLabel = "";
                contextObj.ddlMonthlyDayNo.IsVisible = true;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = true;
                contextObj.ddlMonthlyWeekDay.IsVisible = true;

                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];

                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlYearlyDayNo.IsVisible = false;
                contextObj.ddlYearlyMonthDay.IsVisible = false;
                contextObj.ddlYearlyWeekOccurence.IsVisible = false;
                contextObj.ddlYearlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyMonthofYear.IsVisible = false;

                for (let i = 0; i < contextObj.fieldDetailsAddEdit.length; i++) {
                    switch (contextObj.fieldDetailsAddEdit[i].FieldId) {
                        case 1372:
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "5";
                            break;
                        case 1373:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1374:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1375:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                    }
                }
                var element = this.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "-68px 0px 0px 60px";
                var element2 = this.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "-15px 0px 0px 60px";
                var element3 = this.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "-54px 0px 0px 170px";
                var element3 = this.el.nativeElement.getElementsByClassName("Radio-1372");
                element3[0].style.display = "block";
                element3[1].style.display = "block";
                element3[2].style.display = "block";
                element3[0].style.padding = "5px 0px";
                element3[1].style.padding = "5px 0px";
                element3[2].style.padding = "5px 0px";

                var element4 = this.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = this.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = this.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = this.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = this.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = this.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case "4":
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = true;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = true;
                contextObj.rbtnYearlyReccurencePatternCriteria.FieldLabel = "";
                contextObj.ddlYearlyDayNo.IsVisible = true;
                contextObj.ddlYearlyMonthDay.IsVisible = true;
                contextObj.ddlYearlyWeekOccurence.IsVisible = true;
                contextObj.ddlYearlyWeekDay.IsVisible = true;
                contextObj.ddlYearlyMonthofYear.IsVisible = true;

                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlMonthlyDayNo.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = false;
                contextObj.ddlMonthlyWeekDay.IsVisible = false;

                for (let i = 0; i < contextObj.fieldDetailsAddEdit.length; i++) {
                    switch (contextObj.fieldDetailsAddEdit[i].FieldId) {
                        case 1381:
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "8";
                            break;
                        case 1376:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1377:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1378:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1379:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                        case 1380:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "of";
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "1";
                            contextObj.fieldDetailsAddEdit[i]["IsEnabled"] = false;
                            contextObj.fieldDetailsAddEdit[i].ShowSelect = false
                            break;
                    }
                }
                var elementPre = this.el.nativeElement.getElementsByClassName("MainContainer_1373");
                elementPre[0].style.margin = "0px";
                var elementPre2 = this.el.nativeElement.getElementsByClassName("MainContainer_1374");
                elementPre2[0].style.margin = "0px";
                var elementPre3 = this.el.nativeElement.getElementsByClassName("MainContainer_1375");
                elementPre3[0].style.margin = "0px";

                var element = this.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element[0].style.margin = "-68px 0px 0px 60px";
                var element = this.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element[0].style.margin = "-54px 0px 0px 160px";
                var element2 = this.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element2[0].style.margin = "-15px 0px 0px 60px";
                var element3 = this.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element3[0].style.margin = "-54px 0px 0px 160px";
                var element4 = this.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element4[0].style.margin = "-40px 0px 0px 255px";
                var element6 = this.el.nativeElement.getElementsByClassName("Div-1380");
                if (element6.length != 0)
                    element6[0].style.margin = "-30px 0px 0px 20px";
                var element5 = this.el.nativeElement.getElementsByClassName("Radio-1381");
                element5[0].style.display = "block";
                element5[1].style.display = "block";
                element5[2].style.display = "block";
                element5[0].style.padding = "5px 0px";
                element5[1].style.padding = "5px 0px";
                element5[2].style.padding = "5px 0px";
                break;
            case "5":
                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.ddlMonthlyDayNo.IsEnabled = false;
                contextObj.ddlMonthlyWeekOccurence.IsEnabled = false;
                contextObj.ddlMonthlyWeekDay.IsEnabled = false;
                break;
            case "6":
                contextObj.ddlMonthlyDayNo.IsEnabled = true;

                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.ddlMonthlyWeekOccurence.IsEnabled = false;
                contextObj.ddlMonthlyWeekDay.IsEnabled = false;
                break;
            case "7":
                contextObj.ddlMonthlyWeekOccurence.IsEnabled = true;
                contextObj.ddlMonthlyWeekDay.IsEnabled = true;

                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.ddlMonthlyDayNo.IsEnabled = false;
                break;
            case "8":
                contextObj.ddlYearlyDayNo.IsEnabled = false;
                contextObj.ddlYearlyMonthDay.IsEnabled = false;
                contextObj.ddlYearlyWeekOccurence.IsEnabled = false;
                contextObj.ddlYearlyWeekDay.IsEnabled = false;
                contextObj.ddlYearlyMonthofYear.IsEnabled = false;
                break;
            case "9":
                contextObj.ddlYearlyDayNo.IsEnabled = true;
                contextObj.ddlYearlyMonthDay.IsEnabled = true;

                contextObj.ddlYearlyWeekOccurence.IsEnabled = false;
                contextObj.ddlYearlyWeekDay.IsEnabled = false;
                contextObj.ddlYearlyMonthofYear.IsEnabled = false;
                break;
            case "10":
                contextObj.ddlYearlyWeekOccurence.IsEnabled = true;
                contextObj.ddlYearlyWeekDay.IsEnabled = true;
                contextObj.ddlYearlyMonthofYear.IsEnabled = true;

                contextObj.ddlMonthlyDayNo.IsEnabled = false;
                contextObj.ddlMonthlyWeekOccurence.IsEnabled = false;
                contextObj.ddlMonthlyWeekDay.IsEnabled = false;
                contextObj.ddlYearlyDayNo.IsEnabled = false;
                contextObj.ddlYearlyMonthDay.IsEnabled = false;
                break;
            case "11":
                contextObj.ddlEndAfter.IsEnabled = true;
                contextObj.ddlEndAfter.IsVisible = true;

                contextObj.datePickerEndBy.IsEnabled = false;
                contextObj.datePickerEndBy.IsVisible = true;
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1422");
                element[0].style.margin = "-65px 0px 0px 100px";
                var element1 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1382");
                element1[0].style.margin = "20px 0px 0px 0px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1198");
                element2[0].style.margin = "-18px 0px 0px 100px";
                break;
            case "12":
                contextObj.datePickerEndBy.IsEnabled = true;
                contextObj.datePickerEndBy.IsVisible = true;

                contextObj.ddlEndAfter.IsEnabled = false;
                contextObj.ddlEndAfter.IsVisible = true;
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1422");
                element[0].style.margin = "-65px 0px 0px 100px";
                var element1 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1382");
                element1[0].style.margin = "20px 0px 0px 0px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1198");
                element2[0].style.margin = "-18px 0px 0px 100px";
                break;
            //case "13":
            //    contextObj.txtbxEvery.IsEnabled = true;
            //    contextObj.txtbxEvery.IsVisible = true;

            //    contextObj.txtbxAny.IsEnabled = false;
            //    contextObj.txtbxAny.IsVisible = true;
            //    break;
            //case "14":
            //    contextObj.txtbxAny.IsEnabled = true;
            //    contextObj.txtbxAny.IsVisible = true;

            //    contextObj.txtbxEvery.IsEnabled = false;
            //    contextObj.txtbxEvery.IsVisible = true;
            //    break;
        }
    }

    checkBoxChange(event: any) {
        var contextObj = this;
        if (event.chkBoxObject.fieldId == 1402) {
            contextObj.isMeterBased = event.chkBoxObject.IsChecked;

            if (contextObj.isMeterBased == true) {
                contextObj.ddlMeterField.IsEnabled = true;
                contextObj.ddlMeterField.IsVisible = true;
                contextObj.ddlMeterField.IsMandatory = true;
                contextObj.rbtnFrequency.IsVisible = true;
                contextObj.rbtnFrequency.IsMandatory = true;

                contextObj.ddlPerformOn.IsEnabled = false;
                contextObj.ddlPerformOn.IsVisible = false;
                contextObj.rbtnReccurencePattern.IsEnabled = false;
                contextObj.rbtnReccurencePattern.IsVisible = false;

                for (let i = 0; i < contextObj.fieldDetailsAddEdit.length; i++) {
                    switch (contextObj.fieldDetailsAddEdit[i].FieldId) {
                        case 1406:
                            contextObj.fieldDetailsAddEdit[i]["FieldValue"] = "13";
                            break;
                        case 1407:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            break;
                        case 1408:
                            contextObj.fieldDetailsAddEdit[i]["FieldLabel"] = "";
                            break;
                    }
                }
            }
            else if (contextObj.isMeterBased == false) {
                contextObj.ddlMeterField.IsEnabled = false;
                contextObj.ddlMeterField.IsVisible = false;
                contextObj.ddlMeterField.IsMandatory = false;
                contextObj.ddlMeterField.FieldValue = "-1";
                contextObj.rbtnFrequency.IsVisible = false;
                contextObj.rbtnFrequency.IsMandatory = false;
                contextObj.txtbxEvery.IsVisible = false;
                contextObj.txtbxAny.FieldValue = "";
                contextObj.txtbxEvery.IsVisible = false;
                contextObj.txtbxAny.FieldValue = "";

                contextObj.ddlPerformOn.IsEnabled = true;
                contextObj.ddlPerformOn.IsVisible = true;
                contextObj.rbtnReccurencePattern.IsEnabled = true;
                contextObj.rbtnReccurencePattern.IsVisible = true;
            }

        } else if (event.chkBoxObject.fieldId == 1410) {
            contextObj.isAutoGeneratedWorkOrder = event.chkBoxObject.IsChecked;

            if (contextObj.isAutoGeneratedWorkOrder == true) {
                contextObj.txtbxGenerateWorkOrders.IsEnabled = true;
                contextObj.txtbxGenerateWorkOrders.IsVisible = true;
                contextObj.txtbxGenerateWorkOrders.IsMandatory = true;
                contextObj.txtbxGenerateWorkOrders.HasValidationError = true;
                contextObj.txtbxGenerateWorkOrders.IsLocallyValidated = false;
                contextObj.ddlWorkType.IsEnabled = true;
                contextObj.ddlWorkType.IsVisible = true;
                contextObj.ddlWorkType.IsMandatory = true;
                contextObj.ddlWorkType.HasValidationError = true;
                contextObj.ddlWorkType.IsLocallyValidated = false;
                if (contextObj.ddlWorkType.LookupDetails.LookupValues.length == 1) {
                    var workTypeId = contextObj.ddlWorkType.LookupDetails.LookupValues[0].Id;
                    contextObj.ddlWorkType.FieldValue = workTypeId;
                    contextObj.workOrdereService.loadActionPointUser(workTypeId, 1412, this.scheduleTypesSiteId).subscribe(function (resultData) {
                        if (resultData["Data"]["LookupValues"] != "") {
                            contextObj.ckblActionPointUser.IsEnabled = true;
                            contextObj.ckblActionPointUser.IsVisible = true;
                            contextObj.ckblActionPointUser.IsMandatory = true;
                            contextObj.ckblActionPointUser.HasValidationError = true;
                            contextObj.ckblActionPointUser.IsLocallyValidated = false;
                            contextObj.ckblActionPointUser.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]
                        }
                    });
                }
            }
            else if (contextObj.isAutoGeneratedWorkOrder == false) {
                contextObj.txtbxGenerateWorkOrders.IsEnabled = false;
                contextObj.txtbxGenerateWorkOrders.IsVisible = true;
                contextObj.txtbxGenerateWorkOrders.IsMandatory = false;
                contextObj.txtbxGenerateWorkOrders.HasValidationError = false;
                contextObj.txtbxGenerateWorkOrders.IsLocallyValidated = false;
                contextObj.txtbxGenerateWorkOrders.FieldValue = "";
                contextObj.ddlWorkType.IsEnabled = false;
                contextObj.ddlWorkType.IsVisible = true;
                contextObj.ddlWorkType.IsMandatory = false;
                contextObj.ddlWorkType.FieldValue = "-1";
                contextObj.ddlWorkType.HasValidationError = false;
                contextObj.ddlWorkType.IsLocallyValidated = false;
                contextObj.ckblActionPointUser.IsEnabled = false;
                contextObj.ckblActionPointUser.IsVisible = false;
                contextObj.ckblActionPointUser.MultiFieldValues = null;
            }
        } else if (event.chkBoxObject.fieldId == 1370) {
            contextObj.isApplyUpdatesforMasterPM = event.chkBoxObject.IsChecked;

            if (contextObj.isApplyUpdatesforMasterPM == true) {

            }
            else if (contextObj.isApplyUpdatesforMasterPM == false) {

            }
        }
    }

    fieldChange(event: any) {
        var contextObj = this;
        var fieldLabel = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldLabel"];
        if (this.action == "add") {
            if (fieldLabel == "Equipment Category") {
                this.equipmentCategoryId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldValue"];
                if (this.equipmentCategoryId > -1) {
                    this.ddlEquipmentClass.IsMandatory = true;
                    this.ddlEquipmentClass.IsEnabled = true;
                    this.ddlEquipmentClass.IsVisible = true;
                    this.ddlEquipmentClass.FieldValue = "-1";
                    this.ddlEquipmentClass.HasValidationError = true;
                    this.ddlEquipmentClass.IsLocallyValidated = false;

                    this.ckblEquipmentNo.IsMandatory = true;
                    this.ckblEquipmentNo.IsEnabled = false;
                    this.ckblEquipmentNo.IsVisible = true;
                    this.ckblEquipmentNo.LookupDetails.LookupValues = [];
                    this.ckblEquipmentNo.MultiFieldValues = [];

                    this.workOrdereService.loadEquipmentClassForPM(this.equipmentCategoryId, this.scheduleTypesSiteId, this.masterPMId).subscribe(function (resultData) {
                        if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                            contextObj.ddlEquipmentClass.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                        }
                    });
                } else {
                    this.ddlEquipmentClass.IsMandatory = true;
                    this.ddlEquipmentClass.IsEnabled = false;
                    this.ddlEquipmentClass.IsVisible = true;
                    this.ddlEquipmentClass.FieldValue = "-1";
                    this.ddlEquipmentClass.LookupDetails.LookupValues = [];

                    this.clearFieldDetails();
                }
            } else if (fieldLabel == "Equipment Class") {
                this.equipmentClassId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldValue"];
                if (this.equipmentClassId > -1) {
                    this.ckblEquipmentNo.IsMandatory = true;
                    this.ckblEquipmentNo.IsEnabled = true;
                    this.ckblEquipmentNo.IsVisible = true;
                    /* meterBased.IsEnabled = true;
                       meterBased.IsVisible = true; */
                    this.workOrdereService.loadEquipmentNoForPM(this.equipmentClassId, this.scheduleTypesSiteId, this.masterPMId).subscribe(function (resultData) {
                        if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                            contextObj.ckblEquipmentNo.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                        }
                    });
                    /* var equipmentNoFieldId = 1401;
                     this.workOrdereService.loadMeterFieldForPM(equipmentNoFieldId, this.equipmentClassId, this.equipmentCategoryId).subscribe(function (resultData) {
                         if (resultData["Data"]["LookupValues"] != "") {
                             //var ddlMeterField = contextObj.fieldDetailsAddEdit.find(function (item) { return item.ReportFieldId === 500328 })
                             contextObj.ddlMeterField.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]
                         }
                     }); */
                } else {
                    this.clearFieldDetails();
                    /* meterBased.IsEnabled = false;
                       meterBased.IsVisible = true; */
                }
            }
            /* else if (fieldLabel == "Meter Field") {
            rbtnFrequency.IsEnabled = true;
            rbtnFrequency.IsVisible = true;
            rbtnFrequency.FieldValue = "1";
            txtbxEveryFrequency.IsEnabled = true;
            txtbxEveryFrequency.IsVisible = true;            
            } */
            else if (fieldLabel == "Work Type") {
                var workTypeId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldValue"];
                var workTypeFieldId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldId"];
                if (workTypeId > -1 && workTypeFieldId == 1412) {
                    this.ckblActionPointUser.IsMandatory = false;
                    this.ckblActionPointUser.IsEnabled = false;
                    this.ckblActionPointUser.IsVisible = false;
                    this.ckblActionPointUser.LookupDetails.LookupValues = [];
                    this.ckblActionPointUser.MultiFieldValues = [];
                    this.workOrdereService.loadActionPointUser(workTypeId, workTypeFieldId, this.scheduleTypesSiteId).subscribe(function (resultData) {
                        if (resultData["Data"]["LookupValues"] != "") {
                            contextObj.ckblActionPointUser.IsMandatory = true;
                            contextObj.ckblActionPointUser.IsEnabled = true;
                            contextObj.ckblActionPointUser.IsVisible = true;
                            contextObj.ckblActionPointUser.HasValidationError = true;
                            contextObj.ckblActionPointUser.IsLocallyValidated = false;
                            contextObj.ckblActionPointUser.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]
                        }
                    });
                } else {
                    this.ckblActionPointUser.IsMandatory = false;
                    this.ckblActionPointUser.IsEnabled = false;
                    this.ckblActionPointUser.IsVisible = false;
                    this.ckblActionPointUser.LookupDetails.LookupValues = [];
                    this.ckblActionPointUser.MultiFieldValues = [];
                }
            } else if (fieldLabel == "Master PM") {
                this.masterPMId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldValue"];
                if (this.masterPMId > -1) {
                    this.ckbxApplyUpdates.IsEnabled = true;
                    if (this.scheduleTypesRouteId > -1) {
                        this.workOrdereService.getMasterPMSchedule(this.masterPMId).subscribe(function (resultData) {
                            contextObj.masterPMDetails = JSON.parse(resultData["Data"].FieldBinderData);

                            contextObj.loadReccurencePatternFromMastePM(contextObj.masterPMDetails);
                        });
                    } else {
                        this.workOrdereService.getMasterPMSchedule(this.masterPMId).subscribe(function (resultData) {
                            contextObj.masterPMDetails = JSON.parse(resultData["Data"].FieldBinderData);
                            contextObj.ddlEquipmentCategory.FieldValue = contextObj.masterPMDetails[0].ComponentCategoryId;
                            contextObj.ddlEquipmentCategory.IsMandatory = true;
                            contextObj.ddlEquipmentCategory.IsEnabled = false;
                            contextObj.ddlEquipmentCategory.IsVisible = true;
                            contextObj.ddlEquipmentCategory.IsLocallyValidated = false;

                            contextObj.workOrdereService.loadEquipmentClassForPM(contextObj.masterPMDetails[0].ComponentCategoryId, contextObj.scheduleTypesSiteId, contextObj.masterPMId).subscribe(function (resultData) {
                                if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                                    contextObj.ddlEquipmentClass.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                                    contextObj.ddlEquipmentClass.IsMandatory = true;
                                    contextObj.ddlEquipmentClass.IsEnabled = false;
                                    contextObj.ddlEquipmentClass.IsVisible = true;
                                    contextObj.ddlEquipmentClass.IsLocallyValidated = false;
                                    contextObj.ddlEquipmentClass.FieldValue = contextObj.masterPMDetails[0].ClassId;
                                }
                            });

                            contextObj.workOrdereService.loadEquipmentNoForPM(contextObj.masterPMDetails[0].ClassId, contextObj.scheduleTypesSiteId, contextObj.masterPMId).subscribe(function (resultData) {
                                if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                                    contextObj.ckblEquipmentNo.IsMandatory = true;
                                    contextObj.ckblEquipmentNo.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                                    contextObj.ckblEquipmentNo.IsMandatory = true;
                                    contextObj.ckblEquipmentNo.IsEnabled = true;
                                    contextObj.ckblEquipmentNo.IsVisible = true;
                                }
                            });
                            contextObj.loadReccurencePatternFromMastePM(contextObj.masterPMDetails);
                        });
                    }
                } else {
                    if (this.scheduleTypesRouteId > -1) {
                        this.ckbxApplyUpdates.IsEnabled = false;
                        this.ckbxApplyUpdates.FieldValue = "false";
                        this.clearFieldDetails();
                    } else {
                        this.ckbxApplyUpdates.IsEnabled = false;
                        this.ckbxApplyUpdates.FieldValue = "false";
                        this.ddlEquipmentCategory.IsMandatory = true;
                        this.ddlEquipmentCategory.IsEnabled = true;
                        this.ddlEquipmentCategory.IsVisible = true;
                        this.ddlEquipmentCategory.HasValidationError = true;
                        this.ddlEquipmentCategory.IsLocallyValidated = false;
                        this.ddlEquipmentCategory.FieldValue = "-1";
                        this.ddlEquipmentCategory.LookupDetails.LookupValues = [];
                        this.workOrdereService.loadEquipmentCategoryForPM(this.scheduleTypesSiteId, this.masterPMId).subscribe(function (resultData) {
                            if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                                contextObj.ddlEquipmentCategory.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                            }
                        });

                        this.ddlEquipmentClass.IsMandatory = true;
                        this.ddlEquipmentClass.IsEnabled = false;
                        this.ddlEquipmentClass.IsVisible = true;
                        this.ddlEquipmentClass.FieldValue = "-1";
                        this.ddlEquipmentClass.LookupDetails.LookupValues = [];
                        this.clearFieldDetails();
                    }
                }
            }
        } else if (this.action == "edit") {
            if (fieldLabel == "Work Type") {
                var workTypeId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldValue"];
                var workTypeFieldId = event["ddlRelationShipEvent"]["ChildFieldObject"]["FieldId"];
                if (workTypeId > -1 && workTypeFieldId == 1412) {
                    this.ckblActionPointUser.IsMandatory = false;
                    this.ckblActionPointUser.IsEnabled = false;
                    this.ckblActionPointUser.IsVisible = false;
                    this.ckblActionPointUser.LookupDetails.LookupValues = [];
                    this.ckblActionPointUser.MultiFieldValues = [];
                    this.workOrdereService.loadActionPointUser(workTypeId, workTypeFieldId, this.scheduleTypesSiteId).subscribe(function (resultData) {
                        if (resultData["Data"]["LookupValues"] != "") {
                            contextObj.ckblActionPointUser.IsEnabled = true;
                            contextObj.ckblActionPointUser.IsVisible = true;
                            contextObj.ckblActionPointUser.IsMandatory = true;
                            contextObj.ckblActionPointUser.HasValidationError = true;
                            contextObj.ckblActionPointUser.IsLocallyValidated = false;
                            contextObj.ckblActionPointUser.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]
                        }
                    });
                } else {
                    this.ckblActionPointUser.IsMandatory = false;
                    this.ckblActionPointUser.IsEnabled = false;
                    this.ckblActionPointUser.IsVisible = false;
                    this.ckblActionPointUser.LookupDetails.LookupValues = [];
                    this.ckblActionPointUser.MultiFieldValues = [];
                }
            }
        }
    }

    public lstBoxChange(event: any) {
        var contextObj = this;
        var arrList: any[] = [];
        var fieldLabel = event["listChangeObject"]["fieldObject"]["FieldLabel"];
        if (this.scheduleTypesRouteId > -1 && fieldLabel == "Equipment No.") {
            var tempIds: any[] = event["listChangeObject"]["fieldObject"]["MultiFieldValues"];
            if (tempIds.length > 0) {
                var temp: any[] = event["listChangeObject"]["fieldObject"]["LookupDetails"]["LookupValues"];
                var classId = 0;
                for (var i = 0; i < tempIds.length; i++) {
                    var equpmntIds = temp.find(function (item) {
                        return item.Id == tempIds[i];
                    });
                    if (classId == 0) {
                        classId = equpmntIds.ClassId;
                    }
                    arrList.push(
                        {
                            ReportFieldId: 657,
                            Value: equpmntIds.ClassId
                        }
                    );
                }
                var removeArr = arrList.filter(function (item) {
                    return item.Value != classId;
                })
                if (removeArr.length == 0) {
                    arrList.push(
                        {
                            ReportFieldId: 8356,
                            Value: this.scheduleTypesSiteId
                        }
                    );
                    this.workOrdereService.loadMasterPM(JSON.stringify(arrList)).subscribe(function (resultData) {
                        if (resultData["Data"]["FieldBinderData"] != "[]") {
                            contextObj.ddlMasterPM.LookupDetails.LookupValues = JSON.parse(resultData["Data"]["FieldBinderData"]);
                        } else {
                            contextObj.ddlMasterPM.LookupDetails.LookupValues = null;
                        }
                    });
                } else {
                    this.ddlMasterPM.LookupDetails.LookupValues = [];
                    this.ddlMasterPM.FieldValue = "-1";
                }
            } else {
                this.ddlMasterPM.LookupDetails.LookupValues = [];
                this.ddlMasterPM.FieldValue = "-1";
            }
        }
    }

    public loadReccurencePatternFromMastePM(masterPMDetails) {
        var contextObj = this;
        contextObj.ddlPerformOn.FieldValue = contextObj.masterPMDetails[0].WorkDayTypeId;
        contextObj.rbtnReccurencePattern.FieldValue = contextObj.masterPMDetails[0].RecurrencePatternId;
        switch (contextObj.masterPMDetails[0].RecurrencePatternId) {
            case 1:
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "0px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "0px";
                var element3 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "0px";
                var element4 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = contextObj.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case 2:
                var tempWeekDays = new Array();
                contextObj.workOrdereService.loadWeekDaysForPM(contextObj.masterPMId).subscribe(function (resultData) {
                    if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                        contextObj.ckblWeekDays.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                        var checkedWeekDaysDetails = contextObj.ckblWeekDays.LookupDetails.LookupValues;
                        for (var i = 0; i < checkedWeekDaysDetails.length; i++) {
                            if (checkedWeekDaysDetails[i]["IsChecked"] == 1) {
                                tempWeekDays.push(checkedWeekDaysDetails[i]["Id"]);
                            }
                        }
                        contextObj.ckblWeekDays.MultiFieldValues = tempWeekDays;
                        contextObj.ckblWeekDays.IsEnabled = true;
                        contextObj.ckblWeekDays.IsVisible = true;
                        contextObj.ckblWeekDays.FieldLabel = "";
                    }
                });

                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlMonthlyDayNo.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = false;
                contextObj.ddlMonthlyWeekDay.IsVisible = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlYearlyDayNo.IsVisible = false;
                contextObj.ddlYearlyMonthDay.IsVisible = false;
                contextObj.ddlYearlyWeekOccurence.IsVisible = false;
                contextObj.ddlYearlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyMonthofYear.IsVisible = false;
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "0px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "0px";
                var element3 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "0px";
                var element4 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = contextObj.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case 3:
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = true;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = true;
                contextObj.rbtnMonthlyReccurencePatternCriteria.FieldLabel = "";
                contextObj.rbtnMonthlyReccurencePatternCriteria.FieldValue = contextObj.masterPMDetails[0].Monthly;
                switch (contextObj.masterPMDetails[0].Monthly) {
                    case 5:
                        contextObj.ddlMonthlyDayNo.IsVisible = true;
                        contextObj.ddlMonthlyDayNo.FieldValue = "1";
                        contextObj.ddlMonthlyWeekOccurence.IsVisible = true;
                        contextObj.ddlMonthlyWeekOccurence.FieldValue = "1";
                        contextObj.ddlMonthlyWeekDay.IsVisible = true;
                        contextObj.ddlMonthlyWeekDay.FieldValue = "1";
                        break;
                    case 6:
                        contextObj.ddlMonthlyDayNo.FieldValue = contextObj.masterPMDetails[0]["Monthly Day No."];
                        contextObj.ddlMonthlyDayNo.IsEnabled = true;
                        contextObj.ddlMonthlyDayNo.IsVisible = true;
                        contextObj.ddlMonthlyWeekOccurence.IsVisible = true;
                        contextObj.ddlMonthlyWeekOccurence.FieldValue = "1";
                        contextObj.ddlMonthlyWeekDay.IsVisible = true;
                        contextObj.ddlMonthlyWeekDay.FieldValue = "1";
                        break;
                    case 7:
                        contextObj.ddlMonthlyWeekOccurence.FieldValue = contextObj.masterPMDetails[0]["Monthly Week Occurence"];
                        contextObj.ddlMonthlyWeekOccurence.IsEnabled = true;
                        contextObj.ddlMonthlyWeekOccurence.IsVisible = true;
                        contextObj.ddlMonthlyWeekDay.FieldValue = contextObj.masterPMDetails[0]["Monthly Week Day"];
                        contextObj.ddlMonthlyWeekDay.IsEnabled = true;
                        contextObj.ddlMonthlyWeekDay.IsVisible = true;
                        contextObj.ddlMonthlyDayNo.IsVisible = true;
                        contextObj.ddlMonthlyDayNo.FieldValue = "1";
                        break;
                }

                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlYearlyDayNo.IsVisible = false;
                contextObj.ddlYearlyMonthDay.IsVisible = false;
                contextObj.ddlYearlyWeekOccurence.IsVisible = false;
                contextObj.ddlYearlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyMonthofYear.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.FieldLabel = "";
                contextObj.ddlMonthlyWeekDay.FieldLabel = "";
                contextObj.ddlMonthlyDayNo.FieldLabel = "";
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1373");
                element[0].style.margin = "-68px 0px 0px 60px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1374");
                element2[0].style.margin = "-15px 0px 0px 60px";
                var element3 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1375");
                element3[0].style.margin = "-54px 0px 0px 170px";
                var element3 = contextObj.el.nativeElement.getElementsByClassName("Radio-1372");
                element3[0].style.display = "block";
                element3[1].style.display = "block";
                element3[2].style.display = "block";
                element3[0].style.padding = "5px 0px";
                element3[1].style.padding = "5px 0px";
                element3[2].style.padding = "5px 0px";

                var element4 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element4[0].style.margin = "0px";
                var element5 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element5[0].style.margin = "0px";
                var element6 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element6[0].style.margin = "0px";
                var element7 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element7[0].style.margin = "0px";
                var element8 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element8[0].style.margin = "0px";
                var element9 = contextObj.el.nativeElement.getElementsByClassName("Div-1380");
                if (element9.length != 0)
                    element9[0].style.margin = "0px";
                break;
            case 4:
                contextObj.rbtnYearlyReccurencePatternCriteria.IsEnabled = true;
                contextObj.rbtnYearlyReccurencePatternCriteria.IsVisible = true;
                contextObj.rbtnYearlyReccurencePatternCriteria.FieldLabel = "";
                contextObj.rbtnYearlyReccurencePatternCriteria.FieldValue = contextObj.masterPMDetails[0].Yearly;
                switch (contextObj.masterPMDetails[0].Yearly) {
                    case 8:
                        contextObj.ddlYearlyDayNo.IsVisible = true;
                        contextObj.ddlYearlyDayNo.FieldValue = "1";
                        contextObj.ddlYearlyMonthDay.IsVisible = true;
                        contextObj.ddlYearlyMonthDay.FieldValue = "1";
                        contextObj.ddlYearlyMonthofYear.IsVisible = true;
                        contextObj.ddlYearlyMonthofYear.FieldValue = "1";
                        contextObj.ddlYearlyWeekDay.IsVisible = true;
                        contextObj.ddlYearlyWeekDay.FieldValue = "1";
                        contextObj.ddlYearlyWeekOccurence.IsVisible = true;
                        contextObj.ddlYearlyWeekOccurence.FieldValue = "1";
                        break;
                    case 9:
                        contextObj.ddlYearlyDayNo.FieldValue = contextObj.masterPMDetails[0]["Yearly Day No."];
                        contextObj.ddlYearlyDayNo.IsEnabled = true;
                        contextObj.ddlYearlyDayNo.IsVisible = true;
                        contextObj.ddlYearlyMonthDay.FieldValue = contextObj.masterPMDetails[0]["Yearly Month Day"];
                        contextObj.ddlYearlyMonthDay.IsEnabled = true;
                        contextObj.ddlYearlyMonthDay.IsVisible = true;

                        contextObj.ddlYearlyMonthofYear.IsVisible = true;
                        contextObj.ddlYearlyMonthofYear.FieldValue = "1";
                        contextObj.ddlYearlyWeekDay.IsVisible = true;
                        contextObj.ddlYearlyWeekDay.FieldValue = "1";
                        contextObj.ddlYearlyWeekOccurence.IsVisible = true;
                        contextObj.ddlYearlyWeekOccurence.FieldValue = "1";
                        break;
                    case 10:
                        contextObj.ddlYearlyMonthofYear.FieldValue = contextObj.masterPMDetails[0]["Yearly Month of Year"];
                        contextObj.ddlYearlyMonthofYear.IsEnabled = true;
                        contextObj.ddlYearlyMonthofYear.IsVisible = true;
                        contextObj.ddlYearlyWeekDay.FieldValue = contextObj.masterPMDetails[0]["Yearly Week Day"];
                        contextObj.ddlYearlyWeekDay.IsEnabled = true;
                        contextObj.ddlYearlyWeekDay.IsVisible = true;
                        contextObj.ddlYearlyWeekOccurence.FieldValue = contextObj.masterPMDetails[0]["Yearly Week Occurence"];
                        contextObj.ddlYearlyWeekOccurence.IsEnabled = true;
                        contextObj.ddlYearlyWeekOccurence.IsVisible = true;

                        contextObj.ddlYearlyDayNo.IsVisible = true;
                        contextObj.ddlYearlyDayNo.FieldValue = "1";
                        contextObj.ddlYearlyMonthDay.IsVisible = true;
                        contextObj.ddlYearlyMonthDay.FieldValue = "1";
                        break;
                }
                contextObj.ckblWeekDays.IsEnabled = false;
                contextObj.ckblWeekDays.IsVisible = false;
                contextObj.ckblWeekDays.MultiFieldValues = [];
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
                contextObj.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
                contextObj.ddlMonthlyDayNo.IsVisible = false;
                contextObj.ddlMonthlyWeekOccurence.IsVisible = false;
                contextObj.ddlMonthlyWeekDay.IsVisible = false;
                contextObj.ddlYearlyDayNo.FieldLabel = "";
                contextObj.ddlYearlyMonthDay.FieldLabel = "";
                contextObj.ddlYearlyMonthofYear.FieldLabel = "";
                contextObj.ddlYearlyWeekDay.FieldLabel = "";
                contextObj.ddlYearlyWeekOccurence.FieldLabel = "";
                var elementPre = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1373");
                elementPre[0].style.margin = "0px";
                var elementPre2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1374");
                elementPre2[0].style.margin = "0px";
                var elementPre3 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1375");
                elementPre3[0].style.margin = "0px";

                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1376");
                element[0].style.margin = "-68px 0px 0px 60px";
                var element = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1377");
                element[0].style.margin = "-54px 0px 0px 160px";
                var element2 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1378");
                element2[0].style.margin = "-15px 0px 0px 60px";
                var element3 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1379");
                element3[0].style.margin = "-54px 0px 0px 160px";
                var element4 = contextObj.el.nativeElement.getElementsByClassName("MainContainer_1380");
                element4[0].style.margin = "-40px 0px 0px 255px";
                var element6 = contextObj.el.nativeElement.getElementsByClassName("Div-1380");
                if (element6.length != 0)
                    element6[0].style.margin = "-30px 0px 0px 20px";
                var element5 = contextObj.el.nativeElement.getElementsByClassName("Radio-1381");
                element5[0].style.display = "block";
                element5[1].style.display = "block";
                element5[2].style.display = "block";
                element5[0].style.padding = "5px 0px";
                element5[1].style.padding = "5px 0px";
                element5[2].style.padding = "5px 0px";
                break;
        }
        contextObj.workOrdereService.loadSeasonsForPM(contextObj.masterPMId).subscribe(function (resultData) {
            if (resultData["Data"]["LookupValues"]["LookupValues"] != "") {
                contextObj.ckblSeasons.LookupDetails.LookupValues = resultData["Data"]["LookupValues"]["LookupValues"]
                var checkedSeasonDetails = contextObj.ckblSeasons.LookupDetails.LookupValues;
                var tempSeasons = new Array();
                for (var i = 0; i < checkedSeasonDetails.length; i++) {
                    if (checkedSeasonDetails[i]["IsChecked"] == 1) {
                        tempSeasons.push(checkedSeasonDetails[i]["Id"]);
                    }
                }
                contextObj.ckblSeasons.MultiFieldValues = tempSeasons;
            }
        });
    }

    public clearFieldDetails() {
        var contextObj = this;
        if (this.scheduleTypesRouteId == -1) {
            this.ckblEquipmentNo.IsMandatory = true;
            this.ckblEquipmentNo.IsEnabled = false;
            this.ckblEquipmentNo.IsVisible = true;
            this.ckblEquipmentNo.LookupDetails.LookupValues = [];
            this.ckblEquipmentNo.MultiFieldValues = [];
        }

        this.ddlPerformOn.FieldValue = "1";

        this.rbtnReccurencePattern.FieldValue = "1";

        this.ckblWeekDays.IsEnabled = false;
        this.ckblWeekDays.IsVisible = false;
        this.ckblWeekDays.MultiFieldValues = [];

        this.rbtnMonthlyReccurencePatternCriteria.IsEnabled = false;
        this.rbtnMonthlyReccurencePatternCriteria.IsVisible = false;
        this.rbtnMonthlyReccurencePatternCriteria.FieldValue = "5";

        this.rbtnYearlyReccurencePatternCriteria.IsEnabled = false;
        this.rbtnYearlyReccurencePatternCriteria.IsVisible = false;
        this.rbtnYearlyReccurencePatternCriteria.FieldValue = "8";

        this.ddlMonthlyDayNo.IsEnabled = false;
        this.ddlMonthlyDayNo.IsVisible = false;
        this.ddlMonthlyDayNo.FieldValue = "1";

        this.ddlMonthlyWeekOccurence.IsEnabled = false;
        this.ddlMonthlyWeekOccurence.IsVisible = false;
        this.ddlMonthlyWeekOccurence.FieldValue = "1";

        this.ddlMonthlyWeekDay.IsEnabled = false;
        this.ddlMonthlyWeekDay.IsVisible = false;
        this.ddlMonthlyWeekDay.FieldValue = "1";

        this.ddlYearlyDayNo.IsEnabled = false;
        this.ddlYearlyDayNo.IsVisible = false;
        this.ddlYearlyDayNo.FieldValue = "1";

        this.ddlYearlyMonthDay.IsEnabled = false;
        this.ddlYearlyMonthDay.IsVisible = false;
        this.ddlYearlyMonthDay.FieldValue = "1";

        this.ddlYearlyWeekOccurence.IsEnabled = false;
        this.ddlYearlyWeekOccurence.IsVisible = false;
        this.ddlYearlyWeekOccurence.FieldValue = "1";

        this.ddlYearlyWeekDay.IsEnabled = false;
        this.ddlYearlyWeekDay.IsVisible = false;
        this.ddlYearlyWeekDay.FieldValue = "1";

        this.ddlYearlyMonthofYear.IsEnabled = false;
        this.ddlYearlyMonthofYear.IsVisible = false;
        this.ddlYearlyMonthofYear.FieldValue = "1";

        this.rbtnReccurenceRange.FieldValue = "11";

        this.ddlEndAfter.FieldValue = "1";

        this.lstBxSeasons.MultiFieldValues = [];

        if (this.isAutoGeneratedWorkOrder == true) {
            this.txtbxGenerateWorkOrders.IsEnabled = true;
            this.txtbxGenerateWorkOrders.IsVisible = true;
            this.txtbxGenerateWorkOrders.FieldValue = "";
            this.txtbxGenerateWorkOrders.IsMandatory = true;
            this.txtbxGenerateWorkOrders.HasValidationError = true;
            this.txtbxGenerateWorkOrders.IsLocallyValidated = false;

            this.ddlWorkType.IsEnabled = true;
            this.ddlWorkType.IsVisible = true;
            this.ddlWorkType.FieldValue = "-1";
            this.ddlWorkType.IsMandatory = true;
            this.ddlWorkType.HasValidationError = true;
            this.ddlWorkType.IsLocallyValidated = false;

            this.ckblActionPointUser.IsEnabled = false;
            this.ckblActionPointUser.IsVisible = false;
            this.ckblActionPointUser.MultiFieldValues = [];
            this.ckblActionPointUser.HasValidationError = false;
            this.ckblActionPointUser.IsLocallyValidated = false;
        }
    }
}

export interface ReportFieldArray {
    ReportFieldId: number;
    Value: string;
}